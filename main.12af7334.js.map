{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","titleRow","querySelectorAll","tableHeader","cell","setAttribute","innerText","sortGrid","colNum","attribute","tbody","compare","rowsArray","Array","from","rows","rowA","rowB","cells","innerHTML","number1","Number","slice","split","join","sort","append","addEventListener","e","th","target","tagName","contains","cellIndex","dataset","name"],"mappings":"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","file":"main.12af7334.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst titleRow = document.querySelectorAll('th');\nconst tableHeader = document.querySelector('thead');\n\nfor (const cell of titleRow) {\n  cell.setAttribute('data-name', `${cell.innerText}`);\n}\n\ntable.addEventListener('click', e => {\n  const th = e.target;\n\n  if (e.target.tagName !== 'TH' || !tableHeader.contains(th)) {\n    return;\n  }\n\n  sortGrid(th.cellIndex, th.dataset.name);\n});\n\nfunction sortGrid(colNum, attribute) {\n  const tbody = table.querySelector('tbody');\n\n  const rowsArray = Array.from(tbody.rows);\n\n  let compare;\n\n  switch (attribute) {\n    case 'Position':\n    case 'Name':\n      compare = function(rowA, rowB) {\n        return rowA.cells[colNum].innerHTML > rowB.cells[colNum].innerHTML\n          ? 1 : -1;\n      };\n      break;\n\n    case 'Age':\n      compare = function(rowA, rowB) {\n        return rowA.cells[colNum].innerHTML - rowB.cells[colNum].innerHTML;\n      };\n      break;\n\n    default:\n      compare = function(rowA, rowB) {\n        const number1\n        = Number(rowA.cells[colNum].innerHTML.slice(1).split(',').join(''));\n        const number2\n        = Number(rowB.cells[colNum].innerHTML.slice(1).split(',').join(''));\n\n        return number1 - number2;\n      };\n  }\n\n  rowsArray.sort(compare);\n\n  tbody.append(...rowsArray);\n}\n"]}